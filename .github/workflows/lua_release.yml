name: Release

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          # LuaJIT
          - os: ubuntu-latest
            name: LuaJIT release ubuntu-latest
            flags: --features default
            artifact_name: astra
            asset_name: astra-luajit-linux-amd64

          - os: windows-latest
            name: LuaJIT release windows-latest
            flags: --features default
            artifact_name: astra.exe
            asset_name: astra-luajit-windows-amd64.exe

          # LuaJIT 52
          - os: ubuntu-latest
            name: LuaJIT52 release ubuntu-latest
            flags: --no-default-features --features luajit52
            artifact_name: astra
            asset_name: astra-luajit52-linux-amd64

          - os: windows-latest
            name: LuaJIT52 release windows-latest
            flags: --no-default-features --features luajit52
            artifact_name: astra.exe
            asset_name: astra-luajit52-windows-amd64.exe

          ## Luau
          - os: ubuntu-latest
            name: Luau release ubuntu-latest
            flags: --no-default-features --features luau
            artifact_name: astra
            asset_name: astra-luau-linux-amd64

          - os: windows-latest
            name: Luau release windows-latest
            flags: --no-default-features --features luau
            artifact_name: astra.exe
            asset_name: astra-luau-windows-amd64.exe

          ## Lua5.1
          - os: ubuntu-latest
            name: Lua 5.1 release ubuntu-latest
            flags: --no-default-features --features lua51
            artifact_name: astra
            asset_name: astra-lua51-linux-amd64

          - os: windows-latest
            name: Lua 5.1 release windows-latest
            flags: --no-default-features --features lua51
            artifact_name: astra.exe
            asset_name: astra-lua51-windows-amd64.exe
          
          ## Lua5.2
          - os: ubuntu-latest
            name: Lua 5.2 release ubuntu-latest
            flags: --no-default-features --features lua52
            artifact_name: astra
            asset_name: astra-lua52-linux-amd64

          - os: windows-latest
            name: Lua 5.2 release windows-latest
            flags: --no-default-features --features lua52
            artifact_name: astra.exe
            asset_name: astra-lua52-windows-amd64.exe
          
          ## Lua5.3
          - os: ubuntu-latest
            name: Lua 5.3 release ubuntu-latest
            flags: --no-default-features --features lua53
            artifact_name: astra
            asset_name: astra-lua53-linux-amd64

          - os: windows-latest
            name: Lua 5.3 release windows-latest
            flags: --no-default-features --features lua53
            artifact_name: astra.exe
            asset_name: astra-lua53-windows-amd64.exe
          
          ## Lua5.4
          - os: ubuntu-latest
            name: Lua 5.4 release ubuntu-latest
            flags: --no-default-features --features lua54
            artifact_name: astra
            asset_name: astra-lua54-linux-amd64

          - os: windows-latest
            name: Lua 5.4 release windows-latest
            flags: --no-default-features --features lua54
            artifact_name: astra.exe
            asset_name: astra-lua54-windows-amd64.exe

    name: ${{ matrix.name }}
    runs-on: '${{ matrix.os }}'
    environment: production

    env:
      CARGO_INCREMENTAL: 0
      cache-key: "cargo-cache"

    steps:
      - uses: actions/checkout@v4

      - name: Build Server
        run: cargo build --release ${{ matrix.flags }}

      - name: Upload server binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          file: ./target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          environment-url: https://github.com/ArkForgeLabs/Astra
          environment: production

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: "${{ github.token }}"
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: "success"

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: "${{ github.token }}"
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: "failure"
